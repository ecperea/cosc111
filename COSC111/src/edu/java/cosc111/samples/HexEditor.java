/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.java.cosc111.samples;

import java.awt.Color;
import java.awt.Component;
import java.io.UnsupportedEncodingException;
import java.nio.charset.Charset;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Russel
 */
public class HexEditor extends javax.swing.JFrame {
    private String data = "Hello \nWorld";    
    private int maxCols = 16;
    /**
     * Creates new form HexEditor
     */
    public HexEditor() {
        initComponents();
        try {
//            showHex();
            showCharacters();
        } catch (UnsupportedEncodingException ex) {}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtblHexView = new javax.swing.JTable();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(1, 0), new java.awt.Dimension(1, 0), new java.awt.Dimension(1, 32767));
        filler3 = new javax.swing.Box.Filler(new java.awt.Dimension(4, 0), new java.awt.Dimension(4, 0), new java.awt.Dimension(4, 32767));
        txtCharView = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setLayout(new javax.swing.BoxLayout(jPanel1, javax.swing.BoxLayout.LINE_AXIS));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setLayout(new javax.swing.BoxLayout(jPanel2, javax.swing.BoxLayout.LINE_AXIS));

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new java.awt.BorderLayout());

        jScrollPane2.setBackground(new java.awt.Color(255, 255, 255));
        jScrollPane2.setBorder(null);
        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setOpaque(false);
        jScrollPane2.getViewport().setBackground(Color.white);

        jtblHexView.setModel(new MyTableModel());
        jtblHexView.setDefaultRenderer(Object.class, new MyTableRenderer());
        jtblHexView.setOpaque (false);
        jtblHexView.setShowHorizontalLines(false);
        jtblHexView.setShowVerticalLines(false);
        jtblHexView.getTableHeader().setResizingAllowed(false);
        jtblHexView.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jtblHexView);

        jPanel3.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel2.add(jPanel3);

        filler1.setBackground(new java.awt.Color(0, 0, 0));
        filler1.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        jPanel2.add(filler1);
        jPanel2.add(filler3);

        txtCharView.setEditable(false);
        txtCharView.setColumns(8);
        txtCharView.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        txtCharView.setRows(5);
        txtCharView.setBorder(null);
        jPanel2.add(txtCharView);

        jScrollPane1.setViewportView(jPanel2);

        jPanel1.add(jScrollPane1);

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HexEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HexEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HexEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HexEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HexEditor().setVisible(true);
            }
        });
    }
    
    private void showHex() throws UnsupportedEncodingException{
        StringBuilder s = new StringBuilder();
        byte[] dataBytes = data.getBytes("ASCII");
        int curCol = 1;
        for(byte b: dataBytes){
            String hexString = Integer.toHexString(b).toUpperCase();
            s.append(hexString.length()==2?Integer.toHexString(b):"0"+Integer.toHexString(b));
            curCol= (curCol + 1)%maxCols;
            if(curCol==0){
                s.append("\n");
                curCol=1;
            }else{
                s.append(" ");
            }
        }
        //txtHexView.setText(s.toString());        
    }
    
    private void showCharacters() throws UnsupportedEncodingException{        
        StringBuilder s = new StringBuilder();
        byte[] dataBytes = data.getBytes("ASCII");
        int curCol = 1;
        for(byte b: dataBytes){
            
            char c;
            if(b<=(byte)32){
                c = '.';
            }else{                
                c = (char)b;
            }            
            s.append(c);
            curCol= (curCol + 1)%maxCols;
            if(curCol==0){
                s.append("\n");
                curCol=1;
            }
        }
        txtCharView.setText(s.toString());
    }
    
    private class MyTableRenderer extends DefaultTableCellRenderer{               
        @Override
        public Component getTableCellRendererComponent(JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
            Component c = super.getTableCellRendererComponent(table, value, isSelected, hasFocus, row, column);
            c.setBackground(Color.white);
            return c;
        }
        
    }
    
    private class MyTableModel extends DefaultTableModel{

        @Override
        public int getColumnCount() {
            return maxCols + 1;
        }

        @Override
        public String getColumnName(int column) {
            if(column == 0){
                return "Offset";
            }else if(column>=1 && column <=maxCols){
                String hex = Integer.toHexString(column-1).toUpperCase();
                
                return hex.length()%2==0? hex:"0"+hex;
            }
            return "";
        }
        
        
    }
    
    //private class MyHeaderRenderer extends Default
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.Box.Filler filler3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jtblHexView;
    private javax.swing.JTextArea txtCharView;
    // End of variables declaration//GEN-END:variables
}
