package edu.java.cosc111.samples.net;

import java.awt.event.KeyEvent;
import java.awt.event.WindowEvent;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.net.DatagramPacket;
import java.net.DatagramSocket;
import java.net.InetAddress;
import java.net.SocketException;
import java.net.UnknownHostException;
import javax.swing.JOptionPane;

/**
 *
 * @author Russel
 */
public class TextMessenger extends javax.swing.JFrame {
    private static final int BUFF_SIZE = 1024;
    private static final int DEFAULT_PORT = 1024;
    private volatile DatagramSocket socket ;
    /**
     * Creates new form TextMessenger
     */
    public TextMessenger() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTxtConversation = new javax.swing.JTextArea();
        jTxtHost = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTxtPort = new javax.swing.JTextField();
        jBtnSend = new javax.swing.JButton();
        jTxtMsg = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        filler1 = new javax.swing.Box.Filler(new java.awt.Dimension(0, 10), new java.awt.Dimension(0, 10), new java.awt.Dimension(32767, 10));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TextMessenger");
        setResizable(false);

        jTxtConversation.setEditable(false);
        jTxtConversation.setColumns(20);
        jTxtConversation.setRows(5);
        jTxtConversation.setNextFocusableComponent(jTxtMsg);
        jScrollPane1.setViewportView(jTxtConversation);

        jTxtHost.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTxtHostActionPerformed(evt);
            }
        });

        jLabel1.setText("Host: ");

        jLabel2.setText("Port:");

        jBtnSend.setText("Send");
        jBtnSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnSendActionPerformed(evt);
            }
        });

        jTxtMsg.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTxtMsgKeyReleased(evt);
            }
        });

        jLabel3.setText("Message: ");

        jPanel1.setLayout(new java.awt.BorderLayout());

        jList1.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "192.168.0.1/3426", "192.168.0.2/5412", "192.168.0.3/2342", " " };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jList1.setMaximumSize(new java.awt.Dimension(200, 80));
        jList1.setMinimumSize(new java.awt.Dimension(200, 80));
        jList1.setPreferredSize(new java.awt.Dimension(200, 80));
        jScrollPane2.setViewportView(jList1);

        jPanel1.add(jScrollPane2, java.awt.BorderLayout.CENTER);

        jPanel2.setLayout(new java.awt.BorderLayout());

        jLabel4.setText("Available Peers");
        jPanel2.add(jLabel4, java.awt.BorderLayout.CENTER);

        jButton1.setText("Refresh");
        jPanel2.add(jButton1, java.awt.BorderLayout.LINE_END);
        jPanel2.add(filler1, java.awt.BorderLayout.PAGE_END);

        jPanel1.add(jPanel2, java.awt.BorderLayout.PAGE_START);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 407, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtHost)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTxtPort, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTxtMsg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBtnSend)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTxtHost, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jTxtPort, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jBtnSend)
                            .addComponent(jTxtMsg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTxtHostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTxtHostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTxtHostActionPerformed

    private void jBtnSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnSendActionPerformed
        try{
            send(jTxtHost.getText(),Integer.parseInt(jTxtPort.getText()),
                    jTxtMsg.getText());
        }catch (NumberFormatException ex){}
    }//GEN-LAST:event_jBtnSendActionPerformed

    private void jTxtMsgKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTxtMsgKeyReleased
        if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            jBtnSend.doClick();
        }
    }//GEN-LAST:event_jTxtMsgKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TextMessenger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TextMessenger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TextMessenger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TextMessenger.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        TextMessenger program = new TextMessenger();
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                program.setVisible(true);                
                program.createSocket();
                new Thread (new Runnable() {
                    @Override
                    public void run() {                        
                        program.receive();
                    }
                }).start();
            }
        });
        
       
    }
    private void createSocket(){
        try {
            socket = new DatagramSocket();            
        } catch (SocketException ex) {
            JOptionPane.showMessageDialog(this,"Server error: " + ex.getMessage(),
                                        this.getTitle(),JOptionPane.ERROR_MESSAGE);

            this.dispatchEvent(new WindowEvent(this,WindowEvent.WINDOW_CLOSING));
        }            
        try {
            this.setTitle("TextMessenger - (" + InetAddress.getLocalHost().getHostAddress() + "/" +
                    socket.getLocalPort() + ")");
        } catch (UnknownHostException ex) {}
    }
    
    private void send(String host, int port, String msg){                  
        byte[] tmp = new byte[BUFF_SIZE];
        ByteArrayInputStream bArrMsg = new ByteArrayInputStream(msg.getBytes());
        InetAddress oHost; 

        try {
            oHost = InetAddress.getByName(host);
            try {
                int len;            
                while((len=bArrMsg.read(tmp))!=-1){
                    DatagramPacket dMsg = new DatagramPacket(tmp,len,oHost,port);
                    socket.send(dMsg);                                    
                }
            } catch (IOException ex) {
                jTxtConversation.insert("Sending Message Failed: " + ex + "\n",0);
            }
            jTxtConversation.insert("You: " + msg + "\n",0);            
        } catch (UnknownHostException ex) {
            JOptionPane.showMessageDialog(this,"Cannot send message to host: " + ex.getMessage());
        }        
    }
    
    public void receive(){
        while(true){
            byte[] msg = new byte[BUFF_SIZE];
            
            DatagramPacket dMsg = new DatagramPacket(msg, BUFF_SIZE);
            try {
                socket.receive(dMsg);
                String sender = dMsg.getAddress().getHostName()+ "(" +
                                dMsg.getPort() + ")";
                
                jTxtConversation.insert(sender + ":" + 
                                        new String(dMsg.getData()).trim() +
                                        "\n",0);
            } catch (IOException ex) {
                jTxtConversation.insert("Recieving Message Failed: " + 
                                            ex.getMessage() + "\n",0);
            }    
        }
    }    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.Box.Filler filler1;
    private javax.swing.JButton jBtnSend;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JList<String> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTxtConversation;
    private javax.swing.JTextField jTxtHost;
    private javax.swing.JTextField jTxtMsg;
    private javax.swing.JTextField jTxtPort;
    // End of variables declaration//GEN-END:variables
}
